{"version":3,"sources":["InputDateToText.esm.js"],"names":["_noexistMessage","_min","_minMessage","_max","_maxMessage","_formSubmitEventListener","__classPrivateFieldSet","this","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","InputDateToText","HTMLInputElement","[object Object]","super","_formSubmitEvent","bind","noexistMessage","dataset","validationMessageDateNoexist","undefined","Error","min","minMessage","validationMessageDateMin","removeAttribute","max","maxMessage","validationMessageDateMax","step","type","minLength","maxLength","pattern","placeholder","addEventListener","_changeEvent","passive","form","removeEventListener","validity","patternMismatch","_convertValue","_validate","ev","preventDefault","trim","replace","str","String","fromCharCode","charCodeAt","test","substring","valueYear","Number","valueMonth","valueDay","valueDate","Date","getFullYear","getMonth","getDate","_setMessage","_clearMessage","message","setCustomValidity","dispatchEvent","Event","WeakMap"],"mappings":"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","file":"InputDateToText.esm.js","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _noexistMessage, _min, _minMessage, _max, _maxMessage, _formSubmitEventListener;\n/**\n * Convert date control to <input type=text>\n *\n * @version 1.0.0\n */\nexport default class InputDateToText extends HTMLInputElement {\n    constructor() {\n        super();\n        _noexistMessage.set(this, void 0);\n        _min.set(this, void 0);\n        _minMessage.set(this, void 0);\n        _max.set(this, void 0);\n        _maxMessage.set(this, void 0);\n        _formSubmitEventListener.set(this, void 0);\n        __classPrivateFieldSet(this, _formSubmitEventListener, this._formSubmitEvent.bind(this));\n    }\n    connectedCallback() {\n        const noexistMessage = this.dataset.validationMessageDateNoexist;\n        if (noexistMessage === undefined) {\n            throw new Error('Attribute: `data-validation-message-date-noexist` is not set.');\n        }\n        __classPrivateFieldSet(this, _noexistMessage, noexistMessage);\n        /* 日付コントロールを <input type=\"text\"> に置換 */\n        if (this.min !== '') {\n            const minMessage = this.dataset.validationMessageDateMin;\n            if (minMessage === undefined) {\n                throw new Error('Attribute: `data-validation-message-date-min` is not set.');\n            }\n            __classPrivateFieldSet(this, _min, this.min);\n            __classPrivateFieldSet(this, _minMessage, minMessage);\n            this.removeAttribute('min');\n        }\n        if (this.max !== '') {\n            const maxMessage = this.dataset.validationMessageDateMax;\n            if (maxMessage === undefined) {\n                throw new Error('Attribute: `data-validation-message-date-max` is not set.');\n            }\n            __classPrivateFieldSet(this, _max, this.max);\n            __classPrivateFieldSet(this, _maxMessage, maxMessage);\n            this.removeAttribute('max');\n        }\n        if (this.step !== '') {\n            this.removeAttribute('step'); // TODO step 属性指定時の挙動は未実装\n        }\n        this.type = 'text';\n        this.minLength = 8;\n        this.maxLength = 10;\n        this.pattern = '([0-9０-９]{8})|([0-9０-９]{4}[-/－／][0-9０-９]{1,2}[-/－／][0-9０-９]{1,2})';\n        this.placeholder = 'YYYY-MM-DD';\n        this.addEventListener('change', this._changeEvent, { passive: true });\n        this.form?.addEventListener('submit', __classPrivateFieldGet(this, _formSubmitEventListener));\n    }\n    disconnectedCallback() {\n        this.removeEventListener('change', this._changeEvent);\n        this.form?.removeEventListener('submit', __classPrivateFieldGet(this, _formSubmitEventListener));\n    }\n    /**\n     * フォームコントロールの内容が変更されたときの処理\n     */\n    _changeEvent() {\n        if (this.validity.patternMismatch) {\n            /* ブラウザ標準機能によるチェックを優先する */\n            return;\n        }\n        this._convertValue();\n        this._validate();\n    }\n    /**\n     * フォーム送信時の処理\n     *\n     * @param {Event} ev - Event\n     */\n    _formSubmitEvent(ev) {\n        this._convertValue();\n        if (!this._validate()) {\n            ev.preventDefault();\n        }\n    }\n    /**\n     * 入力値を変換（整形）する\n     */\n    _convertValue() {\n        let value = this.value.trim();\n        if (value === '') {\n            this.value = value;\n            return;\n        }\n        /* 数字を半角化 */\n        value = value.replace(/[０-９－／]/g, (str) => String.fromCharCode(str.charCodeAt(0) - 0xfee0));\n        if (/^[0-9]{8}$/.test(value)) {\n            /* e.g. 20000101 → 2000-01-01 */\n            value = `${value.substring(0, 4)}-${value.substring(4, 6)}-${value.substring(6)}`;\n        }\n        else {\n            /* e.g. 2000/1/1 → 2000-01-01 */\n            value = value\n                .replace(/\\//g, '-')\n                .replace(/-([0-9])-/, '-0$1-')\n                .replace(/-([0-9])$/, '-0$1');\n        }\n        this.value = value;\n    }\n    /**\n     * バリデーションを実行\n     *\n     * @returns {boolean} バリデーションが通れば true\n     */\n    _validate() {\n        if (this.value === '') {\n            return true;\n        }\n        const valueYear = Number(this.value.substring(0, 4));\n        const valueMonth = Number(this.value.substring(5, 7)) - 1;\n        const valueDay = Number(this.value.substring(8, 10));\n        const valueDate = new Date(valueYear, valueMonth, valueDay);\n        if (valueDate.getFullYear() !== valueYear || valueDate.getMonth() !== valueMonth || valueDate.getDate() !== valueDay) {\n            /* 2月30日など存在しない日付の場合 */\n            this._setMessage(__classPrivateFieldGet(this, _noexistMessage));\n            return false;\n        }\n        if (__classPrivateFieldGet(this, _min) !== undefined &&\n            valueDate < new Date(Number(__classPrivateFieldGet(this, _min).substring(0, 4)), Number(__classPrivateFieldGet(this, _min).substring(5, 7)) - 1, Number(__classPrivateFieldGet(this, _min).substring(8, 10)))) {\n            /* min 属性値より過去の日付を入力した場合 */\n            this._setMessage(__classPrivateFieldGet(this, _minMessage));\n            return false;\n        }\n        if (__classPrivateFieldGet(this, _max) !== undefined &&\n            valueDate > new Date(Number(__classPrivateFieldGet(this, _max).substring(0, 4)), Number(__classPrivateFieldGet(this, _max).substring(5, 7)) - 1, Number(__classPrivateFieldGet(this, _max).substring(8, 10)))) {\n            /* max 属性値より未来の日付を入力した場合 */\n            this._setMessage(__classPrivateFieldGet(this, _maxMessage));\n            return false;\n        }\n        this._clearMessage();\n        return true;\n    }\n    /**\n     * カスタムバリデーション文言を設定\n     *\n     * @param {string} message - カスタムバリデーション文言\n     */\n    _setMessage(message) {\n        this.setCustomValidity(message);\n        this.dispatchEvent(new Event('invalid'));\n    }\n    /**\n     * カスタムバリデーション文言を削除\n     */\n    _clearMessage() {\n        this.setCustomValidity('');\n    }\n}\n_noexistMessage = new WeakMap(), _min = new WeakMap(), _minMessage = new WeakMap(), _max = new WeakMap(), _maxMessage = new WeakMap(), _formSubmitEventListener = new WeakMap();\n"]}